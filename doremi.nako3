#------------------------------------------------
＃ ドレミプレーヤー(doremi.nako3)
#------------------------------------------------
＃変数
＃＃設定
MML変換設定辞書とは変数。
MML字幕設定辞書とは変数。

＃＃演奏データ
変数 MML演奏データ＝空辞書。
変数 MML字幕データ＝空配列。

#------------------------------------------------
＃ ウェブオーディオAPI
#------------------------------------------------
●オーディオコンテキスト作成
    「new AudioContext()||webkitAudioContext()」をJS実行。
ここまで。

●(オーディオコンテキストを)MML演奏データ再生処理とは
    MML演奏データ["データ"]を反復
      もし、対象["音量"]＞0ならば、
        音番号＝対象["音番号"]。
        開始時間＝対象["開始時間"]。
        停止時間＝対象["停止時間"]。
        余韻＝対象["音色"]の余韻設定。
        オシレータ＝オーディオコンテキストに対象で音準備。
        オシレータ["frequency"]["value"]＝音番号を周波数変換。
        オシレータの「start」を[開始時間]でJSメソッド実行。
        オシレータの「stop」を[停止時間+余韻]でJSメソッド実行。
      ここまで。
    ここまで。
ここまで。

●(音番号を)周波数変換とは
    440*(2^((音番号-69)/12))で戻る。
ここまで。

●(オーディオコンテキストにデータで)音準備とは
	オシレータ＝オーディオコンテキストの「createOscillator」を[]でJSメソッド実行。
	ゲイン＝オーディオコンテキストの「createGain」を[]でJSメソッド実行。
    # 音量設定
    音量＝データ["音量"]。
    開始時間＝データ["開始時間"]。
    停止時間＝データ["停止時間"]。
    ゲイン["gain"]の「setValueAtTime」を[音量,開始時間]でJSメソッド実行。
    # 音色設定
    //音色は10～19までサイン波、20～29まで矩形波、30～39まで鋸歯状波、40～49まで三角波。
    //0～9まで三角波(とりあえず三角波をデフォルトにする)
    //各1の位0～4まで単に余韻の長さの変化。5～9は発声時間固定で余韻の長さの変化。
    音色＝データ["音色"]。
    余韻＝音色の余韻設定。
    オシレータ["type"]＝「triangle」//デフォルト
    もし、(10≦音色)かつ(音色＜20)ならば、オシレータ["type"]＝「sine」。
    もし、(20≦音色)かつ(音色＜30)ならば、オシレータ["type"]＝「square」。
    もし、(30≦音色)かつ(音色＜40)ならば、オシレータ["type"]＝「sawtooth」。
    もし、(40≦音色)かつ(音色＜50)ならば、オシレータ["type"]＝「triangle」。

    もし、((音色%10/5)を整数変換)＝0ならば、
        ゲイン["gain"]の「setValueAtTime」を[音量,停止時間]でJSメソッド実行。
        ゲイン["gain"]の「exponentialRampToValueAtTime」を[0.001,停止時間+余韻]でJSメソッド実行。
    違えば、
        発声時間＝0.5。
        音長＝停止時間-開始時間。
        もし、発声時間＞音長ならば、発声時間＝音長。
        ゲイン["gain"]の「exponentialRampToValueAtTime」を[0.001,開始時間+発声時間+余韻]でJSメソッド実行。
    ここまで。
    # 接続
    オシレータの「connect」を[ゲイン]でJSメソッド実行。
    それの「connect」を[オーディオコンテキスト["destination"]]でJSメソッド実行。
    オシレータを戻す。
ここまで。

●(音色の)余韻設定とは
    余韻＝(音色%5)/2。もし、余韻＝0ならば、余韻＝0.1。
    余韻を戻す。
ここまで。


#------------------------------------------------
＃ MMLを演奏データに変換
#------------------------------------------------
＃＃ストトン→MML
●(ドレミから|ドレミを)ストトンMML変換処理
    変数 ストトン変換リスト＝{
      "トラック":"!", "TR":"!", "Track":"!", "NowTrack":"!",
      "テンポ":"T", "Tempo":"T",
      "音色":"@", "音階":"o", "音符":"l", "音長":"l", "音量":"v", "ゲート":"q",
      "上":">", "↑":">", "‘":"`",
      "下":"<", "↓":"<",
      "ド":"c", "レ":"d", "ミ":"e", "フ":"f", "ァ":"",
      "ソ":"g", "ラ":"a", "シ":"b", "ン":"r", "ッ":"r",
      "ど":"c", "れ":"d", "み":"e", "ふ":"f", "ぁ":"",
      "そ":"g", "ら":"a", "し":"b", "ん":"r", "っ":"r",
      "ハ":"c","ニ":"d","ホ":"e","ヘ":"f","ト":"g","イ":"a","ロ":"b",
      "＃":"+", "#":"+", "♯":"+", "嬰":"+", "♭":"-", "変":"-",
      "ー":"^",//タイ
      "「":"'", "」":"'",//和音
      "【":"[", "】":"]", "：":":",//繰り返し
      "連符":"D", "Div":"D", "DIV":"D",
      "調":"K", "＊":"*",
      "　":""," ":"","	":"", "=":"", "(":"", ")":"",
    }
    変数 情報変換リスト＝{
      "Lyric":"歌詞", "TrackName":"曲名", "Copyright":"作者", "MetaText":"コメント", "字幕表示":"J",
    }
    ドレミ＝ドレミの「//.*?\n」を改行に正規表現置換。# コメントを削除
    # 範囲コメントを削除
    （ドレミの０から「/*」を文字検索）＞０の間
        もし、（ドレミの０から「*/」を文字検索）＝０ならば、抜ける。
        ドレミ＝ドレミの『/\/\*[\s\S]*?\*\//』を改行に正規表現置換。
    ここまで。
    情報変換リストを反復。ドレミ＝ドレミの対象キーを対象に置換。。。
    ドレミ＝ドレミからMML情報取得。
    ドレミ＝ドレミの『調(.)[\(|（](.*?)[\)|）]』を『調$1{$2}』へ正規表現置換。
    ストトン変換リストを反復。ドレミ＝ドレミの対象キーを対象に置換。。。
    ドレミを半角変換して戻す。
ここまで。

●(mmlから|mmlの)MML情報取得
    「曲名,作者,コメント,歌詞」を「,」で区切る。
    それを反復
        もし、（mmlを「/{対象}[\s|\=|＝|\s]*\{波カッコ}\"[\s\S]*?\"\{波カッコ閉じ}/」で正規表現マッチ）≠NULLならば、
            MML演奏データ["情報"][対象]＝空。
            （mmlを「/{対象}[\s|\=|＝|\s]*\{波カッコ}\"[\s\S]*?\"\{波カッコ閉じ}/」で正規表現マッチ）≠NULLの間
                削除文字数＝（mmlを「/{対象}[\s|\=|＝|\s]*\{波カッコ}\"[\s\S]*?\"\{波カッコ閉じ}/」で正規表現マッチ）の文字数。
                内容＝mmlを「/(?<={対象}[\s|\=|＝|\s]*\{波カッコ}\")[\s\S]*?(?=\"\{波カッコ閉じ})/」で正規表現マッチ。
                mml=mmlの(mmlの0から対象を文字検索)から削除文字数だけ文字削除。
                もし、（対象＝「曲名」）または（対象＝「作者」）ならば、MML演奏データ["情報"][対象]＝内容。
                違えば、MML演奏データ["情報"][対象]＝MML演奏データ["情報"][対象]に内容を一行追加。
            ここまで。
        ここまで。
    ここまで。
    mmlを戻す。
ここまで。